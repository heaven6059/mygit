<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yougou.logistics.city.dal.mapper.ItemCellContentMapper" >
	<resultMap id="BaseResultMap" type="com.yougou.logistics.city.common.model.ItemCellContent" >
	    <result column="brand_No" property="brandNo" jdbcType="VARCHAR" />
	    <result column="locno" property="locno" jdbcType="VARCHAR" />
	    <result column="brand_Name" property="brandName" jdbcType="VARCHAR" />
	    <result column="cell_No" property="cellNo" jdbcType="VARCHAR" />
	    <result column="owner_no" property="ownerNo" jdbcType="VARCHAR" />
	    <result column="owner_name" property="ownerName" jdbcType="VARCHAR" />
	    <result column="item_No" property="itemNo" jdbcType="VARCHAR" />
	    <result column="item_Name" property="itemName" jdbcType="VARCHAR" />
	    <result column="ware_No" property="wareNo" jdbcType="VARCHAR" />
	    <result column="area_No" property="areaNo" jdbcType="VARCHAR" />
	    <result column="area_Name" property="areaName" jdbcType="VARCHAR" />
	    <result column="cate_No" property="cateNo" jdbcType="VARCHAR" />
	    <result column="cate_Name" property="cateName" jdbcType="VARCHAR" />
	    <result column="item_Type" property="itemType" jdbcType="VARCHAR" />
	    <result column="item_type_name" property="itemTypeName" jdbcType="VARCHAR" />
	    <result column="barcode" property="barcode" jdbcType="VARCHAR" />
	    <result column="quality" property="quality" jdbcType="VARCHAR" />
	    <result column="quality_name" property="qualityName" jdbcType="VARCHAR" />
	    <result column="color_No" property="colorNo" jdbcType="VARCHAR" />
	    <result column="color_Name" property="colorName" jdbcType="VARCHAR" />
	    <result column="size_No" property="sizeNo" jdbcType="VARCHAR" />
	    <result column="qty" property="qty" jdbcType="DECIMAL" />
	    <result column="outstock_Qty" property="outstockQty" jdbcType="DECIMAL" />
	    <result column="instock_Qty" property="instockQty" jdbcType="DECIMAL" />
	    <result column="unusual_Qty" property="unusualQty" jdbcType="DECIMAL" />
	    <result column="usable_Qty" property="usableQty" jdbcType="DECIMAL" />
	    <result column="scheduling_qty" property="schedulingQty" jdbcType="DECIMAL" />
	    
	    <result column="status" property="status" jdbcType="VARCHAR" />
	    <result column="statusName" property="statusName" jdbcType="VARCHAR" />
	    <result column="hm_manual_flag" property="hmManualFlag" jdbcType="VARCHAR" />
	    <result column="manualName" property="manualName" jdbcType="VARCHAR" />
	    <result column="years" property="years" jdbcType="VARCHAR" />
	    <result column="yearsName" property="yearsName" jdbcType="VARCHAR" />
	    <result column="season" property="season" jdbcType="VARCHAR" />
	    <result column="seasonName" property="seasonName" jdbcType="VARCHAR" />
	    <result column="gender" property="gender" jdbcType="VARCHAR" />
	    <result column="genderName" property="genderName" jdbcType="VARCHAR" />
	    <result column="cbqty" property="cbqty" jdbcType="DECIMAL" />
	    <result column="sumCbbQty" property="sumCbbQty" jdbcType="DECIMAL" />
	    
	</resultMap>
	<sql id="condition" >
		<if test="null!=params" >
			<if test="null != params.locno and '' != params.locno">
            	and v.locno = #{params.locno,jdbcType=VARCHAR}
            </if>
			<if test="null != params.itemNo and '' != params.itemNo">
            	and v.item_no like '%${params.itemNo}%'
            </if>
            <if test="null != params.itemName and '' != params.itemName">
            	and i.item_name like '%${params.itemName}%'
            </if>
            <if test="null != params.cateNo and '' != params.cateNo">
            	and i.cate_No in (select cate_no from category where cate_code like '${params.cateNo}%')
            </if>
            <if test="null != params.itemType and '' != params.itemType">
            	and v.item_type = #{params.itemType,jdbcType=VARCHAR}
            </if>
            <if test="null != params.ownerNo and '' != params.ownerNo">
            	and v.owner_no = #{params.ownerNo,jdbcType=VARCHAR}
            </if>
            <if test="null != params.barcode and '' != params.barcode">
            	and v.barcode like '%${params.barcode}%'
            </if>
            <if test="null != params.quality and '' != params.quality">
            	and v.quality = #{params.quality,jdbcType=VARCHAR}
            </if>
            <if test="null != params.brandNo and '' != params.brandNo">
            	and i.brand_no = #{params.brandNo,jdbcType=VARCHAR}
            </if>
            <if test="null != params.sysNo and '' != params.sysNo">
            	and i.sys_no = #{params.sysNo,jdbcType=VARCHAR} 
            </if>
            <if test="null != params.cellNo and '' != params.cellNo">
				and v.cell_no like '%${params.cellNo}%'
			</if>
			<if test="null!=params.yearsName and ''!=params.yearsName" >
	            and i.years in (select itemval from LOOKUPDTL where lookupcode = 'YEARS' and ITEMNAME like '%${params.yearsName}%')
	        </if>
	       <!--  <if test="null!=params.seasonName and ''!=params.seasonName" >
	            and i.season in (select itemval from LOOKUPDTL where lookupcode = 'SEASON' and ITEMNAME like '%${params.seasonName}%')
	        </if>
	        <if test="null!=params.genderName and ''!=params.genderName" >
	            and i.gender in (select itemval from LOOKUPDTL where lookupcode = 'GENDER' and ITEMNAME like '%${params.genderName}%')
	        </if> -->
	        <if test="null != params.seasonValues" >
		    	and i.season in
		    	<foreach collection="params.seasonValues" item="seasonName" open="(" close=")" separator=",">
					#{seasonName}
				</foreach>
		  	</if>
		   	<if test="null != params.genderValues" >
		   		and i.gender in
		    	<foreach collection="params.genderValues" item="genderName" open="(" close=")" separator=",">
					#{genderName}
				</foreach>
		   	</if>
			<choose>
			 		<when test="params.cateThreeValues != null">
				 		<foreach collection="params.cateThreeValues" item="value" open=" and (" close=")" separator="or">
							c.search_code like '${value}%'
						</foreach>
			 		</when>
			 		<when test="params.cateTwoValues != null">
			 			<foreach collection="params.cateTwoValues" item="value" open="and (" close=")" separator="or">
							c.search_code like '${value}%'
						</foreach>
			 		</when>
			 		<when test="params.cateOneValues != null">
			 			<foreach collection="params.cateOneValues" item="value" open="and (" close=")" separator="or">
							c.search_code like '${value}%'
						</foreach>
			 		</when>
			 		<otherwise>
			 		</otherwise>
	 		</choose> 
			
            <if test="(null != params.wareNo and '' != params.wareNo) or (null != params.areaNo and '' != params.areaNo)">
            	and v.cell_no in (select cdc.cell_no
                                   from cm_defcell cdc
                                  where 1 = 1
                                  <if test="null != params.cellNo and '' != params.cellNo">
					            	and cdc.cell_no like '%${params.cellNo}%'
					              </if>
                                  <if test="null != params.wareNo and '' != params.wareNo">
                                  		and cdc.ware_no = #{params.wareNo,jdbcType=VARCHAR}
                                  </if>
                                  <if test="null != params.areaNo and '' != params.areaNo">
                                  		and cdc.area_no  in 
                                  		<foreach collection="list" item="item"  open="(" separator="," close=")">  
        									#{item}  
    									</foreach>
                                  </if>
                                  <if test="null != params.locno and '' != params.locno">
                                  		and cdc.locno = #{params.locno,jdbcType=VARCHAR}
                                  </if>)  
            </if>
		</if>
	</sql>
	<sql id="Base_SQL">
		from v_content v
        inner join item i
        on i.item_no = v.item_no
        inner join cm_defcell cdc
        on cdc.locno = v.locno
        and cdc.cell_no = v.cell_no
        inner join cm_defarea cda
        on cda.locno = v.locno
        and cda.ware_no = cdc.ware_no
        and cda.area_no = cdc.area_no
        inner join cm_defware cdw
        on cdw.locno = v.locno
        and cdw.ware_no = cdc.ware_no
        left join brand b
        on b.brand_no = i.brand_no
        left join color_info ci
        	on ci.color_no = i.color_no
        left join category c on i.cate_no=c.cate_no
        left join  (select cbx.locno,
                                     cbx.cell_no,
                                     cbx.item_type,
                                     cbx.quality,
                                     cbd.item_no,
                                     cbd.size_no,
                                     sum(nvl(cbd.qty,0))  cbqty
                                from con_box cbx
                               inner join con_box_dtl cbd
                                  on cbd.locno = cbx.locno
                                 and cbd.owner_no = cbx.owner_no
                                 and cbd.box_no = cbx.box_no
                               where cbx.status = '2'
                               and cbx.locno = #{params.locno,jdbcType=VARCHAR}
                             group by cbx.locno,
                                      cbx.cell_no,
                                      cbx.item_type,
                                      cbx.quality,
                                      cbd.item_no,
                                      cbd.size_no) cb
  		    on cb.locno = v.locno
                   and cb.cell_no = v.cell_no
                   and cb.item_type = v.item_type
                   and cb.quality = v.quality
                   and cb.item_no = v.item_no
                   and cb.size_no = v.size_no
        where 1 = 1
        <include refid="condition" />
	</sql>
	<select id="selectCount" resultType="java.lang.Integer" >
		select count(1) as s
                  from (select  /*+ use_hash(cda,cdc)  */ v.owner_no,
				          v.item_no,
				          i.item_name,
				          i.color_no,
				          ci.color_name,
				          v.size_no,
				          i.brand_no,
				          b.brand_name,
				          v.cell_no,
				          v.item_type,
				          v.quality,
				          cda.area_no,
				          cda.area_name,
				          i.cate_no,
				          i.years,
                 		  i.season,
	                      i.gender,
				          v.barcode,
				          v.status,
                  		  v.hm_manual_flag
					  <include refid="Base_SQL" />
		                 group by v.owner_no,
				          v.item_no,
				          i.item_name,
				          i.color_no,
				          ci.color_name,
				          v.size_no,
				          i.brand_no,
				          b.brand_name,
				          v.cell_no,
				          v.item_type,
				          v.quality,
				          cda.area_no,
				          cda.area_name,
				          i.cate_no,
				          i.years,
                 		  i.season,
	                      i.gender,
				          v.barcode,
				          v.status,
                  		  v.hm_manual_flag)
	</select>
	<select id="selectByPage" resultMap="BaseResultMap" parameterType="map">
		select C.*,  (select bdo.owner_name
                          from bm_defowner bdo
                         where bdo.owner_no = c.owner_no) ownerName,
                              (select l.itemname
                          from lookupdtl l
                         where l.lookupcode = 'ITEM_TYPE'
                           and l.itemval = c.item_type) itemTypeName,
                            (select l.itemname
                          from lookupdtl l
                         where l.lookupcode = 'AREA_QUALITY'
                           and l.itemval = c.quality) qualityName,
                           (select cate.cate_name
                          from CATEGORY cate
                         where cate.cate_no = c.cate_no) cateName,
                            (select l.itemname
                          from lookupdtl l
                         where l.lookupcode = 'CITY_HM_STATUS'
                           and l.itemval = c.status) statusName,
                              (select l.itemname
                          from lookupdtl l
                         where l.lookupcode = 'CITY_HM_MANUAL_FLAG'
                           and l.itemval = c.hm_manual_flag) manualName
		  from (select A.*,rownum rn
		          from (select   /*+ use_hash(cda,cdc)  */ v.owner_no,
					       v.item_no itemNo,
					       i.item_name itemName,
					       i.color_no,
					       ci.color_name colorName,
					       v.size_no sizeNo,
					       i.brand_no,
					       b.brand_name brandName,
					       v.cell_no cellNo,
					       sum(v.qty) qty,
					       sum(v.unusual_qty) unusualQty,
					       sum(v.instock_qty) instockQty,
					       sum(v.outstock_qty) outstockQty,
					       sum(v.qty) + sum(v.instock_qty) - sum(v.outstock_qty) +
					       sum(v.unusual_qty) usableQty,
					       
					       <!--
					                              储位所属库区的库存属性为暂存区、虚拟区
                                                                                    库区用途为虚拟区、异常区、库存调整区，可调度数量为0
                            -->
					       case when max(cdc.CELL_STATUS) !='0' or max(cdc.CHECK_STATUS) !='0' or
					       max(v.STATUS) !='0' or max(v.FLAG) !='0' or max(v.HM_MANUAL_FLAG) !='1'
					       or max(cda.area_attribute) in ('1','4') or max(cda.area_usetype) in
					       ('4','5','7') then 0 else sum(v.qty) - sum(v.outstock_qty) - sum(nvl(cb.cbqty,0)) end as schedulingQty,
					       
					       v.item_type,
					       v.quality,
					       cda.area_no,
					       cda.area_name areaName,
					       i.cate_no,
					       v.status,
			               v.hm_manual_flag,
			               i.years,
                 		   i.season,
	                       i.gender,
	                       (select ITEMNAME
	                          from LOOKUPDTL
	                         where lookupcode = 'YEARS'
	                           and itemval = i.years) yearsName,
	                       (select ITEMNAME
	                          from LOOKUPDTL
	                         where lookupcode = 'SEASON'
	                           and itemval = i.season) seasonName,
	                       (select ITEMNAME
	                          from LOOKUPDTL
	                         where lookupcode = 'GENDER'
	                           and itemval = i.gender) genderName,
					       v.barcode,nvl(sum(cb.cbqty),0) cbqty,
					       sum(v.qty)-nvl(sum(cb.cbqty), 0) bulkqty
					     <include refid="Base_SQL" />
		                 group by v.owner_no,
				          v.item_no,
				          i.item_name,
				          i.color_no,
				          ci.color_name,
				          v.size_no,
				          i.brand_no,
				          b.brand_name,
				          v.cell_no,
				          v.item_type,
				          v.quality,
				          cda.area_no,
				          cda.area_name,
				          i.cate_no,
				          i.years,
                 		  i.season,
	                      i.gender,
				          v.barcode,
				          v.status,
                  		  v.hm_manual_flag
                  		
                  		<choose>
						    <when test="orderByField != null and ''!=orderByField">
								order by ${orderByField}
								<if test="orderByField">
								${orderBy}
								</if>
							</when>
							<otherwise>
								order by cda.area_no, v.cell_no, v.item_no, v.size_no
							</otherwise>
					     </choose> 
					     ) A where rownum &lt; #{page.endRowNum}
			 ) C where rn &gt; #{page.startRowNum}
	</select>

	<select id="selectSumQty" resultType="com.yougou.logistics.city.common.utils.SumUtilMap" parameterType="map">
        select sum(v.qty) qty,
        sum(v.unusual_qty) unusual_qty,
        sum(v.instock_qty) instock_qty,
        sum(v.outstock_qty) outstock_qty,
        sum(v.qty) + sum(v.instock_qty) - sum(v.outstock_qty) +
        sum(v.unusual_qty) usable_Qty,
        (sum(case when cdc.CELL_STATUS !='0' or cdc.CHECK_STATUS !='0' or v.STATUS !='0'
	    or v.FLAG !='0' or v.HM_MANUAL_FLAG!='1' or cda.area_attribute in
	    ('1','4') or cda.area_usetype in ('4','5','7') then 0 else v.qty - v.outstock_qty  end) - sum(nvl(cb.cbqty,0))) as scheduling_qty,
	    sum(nvl(cb.cbqty,0)) cbqty,
       sum(v.qty) - NVL(sum(cb.cbqty),0) bulkqty
        <include refid="Base_SQL" />
  </select>
</mapper>